- 内容: 'Destination Video'
  提示: ''
  翻译: '目的地视频'
- 内容: 'Leverage 3D video and Spatial Audio to deliver an immersive experience.'
  提示: 'Spatial Audio 译为“空间音频”'
  翻译: '利用 3D 视频和空间音频提供身临其境的体验。'
- 内容: 'Overview'
  提示: ''
  翻译: '概述'
- 内容: 'Destination Video is a multiplatform video-playback app for visionOS, iOS, and tvOS. People get a familiar media-browsing experience navigating the libraryʼs content and playing videos they find interesting. The app provides a similar experience on supported platforms, but leverages unique features of visionOS to create a novel, immersive playback experience.'
  提示: ''
  翻译: 'Destination Video 是一款适用于 visionOS、iOS 和 tvOS 的多平台视频播放应用。应用为用户提供了熟悉的媒体浏览体验：在图书馆中浏览内容并可以播放感兴趣的视频。该应用在所有支持的平台上提供了相近的体验，但同时也利用了 visionOS 的特有功能来创建新颖、身临其境的视听体验。'
- 内容: 'Play video in an inline player'
  提示: ''
  翻译: ''
- 内容: 'When you select a video in the library, Destination Video presents a view that displays additional details about the item. The view presents controls to play the video and specify whether to include it in your Up Next list. In visionOS, it also displays a video poster along its leading edge. Tapping the view’s Preview button displays an inline preview of the video.'
  提示: ''
  翻译: ''
- 内容: 'When you present an AVPlayerViewController object’s interface as a child of another view, inline controls display, for example, pause, skip, and seek. Showing standard playback controls in your app provides a familiar UI that automatically adapts its appearance to fit each platform, and is the recommended choice in most cases.'
  提示: ''
  翻译: ''
- 内容: 'Destination Video uses a simple UI for the inline player view: a single button that toggles state of playback. AVPlayerViewController doesn’t provide this controls style, but the app uses it to display the video content without controls by setting the value of its showsPlaybackControls property to false. It then overlays the custom playback controls it requires. See Destination Video’s InlinePlayerView type for details on how you can implement this.'
  提示: ''
  翻译: ''
- 内容: 'Note'
  提示: ''
  翻译: ''
- 内容: 'AVPlayerViewController only supports displaying 2D content when embedded inline.'
  提示: ''
  翻译: ''
- 内容: 'Play video in a full-window player'
  提示: ''
  翻译: ''
- 内容: 'One of the most exciting features of visionOS is its ability to play 3D video along with Spatial Audio, which adds a deeper level of immersion to the viewing experience. Playing 3D content in your app requires that you display AVPlayerViewController full window. When you present the player this way, the system automatically docks it into the ideal viewing position, and presents streamlined playback controls that keep the person’s focus on the content.'
  提示: ''
  翻译: ''
- 内容: 'Note'
  提示: ''
  翻译: ''
- 内容: 'In iOS or tvOS, you typically present video in a full-screen presentation using the fullScreenCover(isPresented:onDismiss:content:) modifier. This API is available in visionOS; however, the recommended way to present the player for full-window playback is to set it as the root view of your app’s window group.'
  提示: ''
  翻译: ''
- 内容: 'Destination Video’s ContentView displays the app’s library by default. It observes changes to the player model’s presentation property, which indicates whether the app requests inline or full-window playback. When the presentation state changes to fullWindow, the view redraws the UI to display the player view in place of the library.'
  提示: ''
  翻译: ''
- 内容: 'When someone selects the Play Video button on the detail view, the app calls the player model’s loadVideo(_: presentation:) method requesting the fullWindow presentation option.'
  提示: ''
  翻译: ''
- 内容: 'After the player model successfully loads the video content for playback, it updates its presentation value to fullWindow, which causes the app to replace the library with PlayerView.'
  提示: ''
  翻译: ''
- 内容: 'To dismiss the full-window player in visionOS, people tap the Back button in the player UI. To handle this action, the app’s PlayerViewControllerDelegate type defines an AVPlayerViewControllerDelegate object that handles the dismissal.'
  提示: ''
  翻译: ''
- 内容: 'When the delegate receives this call, it clears the media from the player model and resets the presentation state back to its default value, which results in the Destination Video app redisplaying the library view.'
  提示: ''
  翻译: ''
- 内容: 'Configure the Spatial Audio experience'
  提示: ''
  翻译: ''
- 内容: 'Media playback apps require common configuration of their capabilities and audio session. In addition to performing the steps outlined in Configuring your app for media playback, Destination Video also adopts new AVAudioSession API to customize a person’s Spatial Audio experience.'
  提示: ''
  翻译: ''
- 内容: 'After the app successfully loads a video for playback, it configures the Spatial Audio experience for the current presentation. For the inline player view, it sets the experience to a small, focused sound stage where the audio originates from the location of the view. When displaying a video full window, it sets the experience to a large, fully immersive sound stage.'
  提示: ''
  翻译: ''
- 内容: 'Present an immersive space'
  提示: ''
  翻译: ''
- 内容: 'Building video playback apps for visionOS provides new opportunities to enhance the viewing experience beyond the bounds of the player window. To add a greater level of immersion, the sample presents an immersive space that displays a scene around a person as they watch the video. It defines the immersive space in the DestinationVideo app structure.'
  提示: ''
  翻译: ''
- 内容: 'The immersive space presents an instance of DestinationView, which maps a texture to the inside of a sphere that it displays around a person. The app presents it using the .progressive immersion style, which lets someone change their amount of immersion by turning the Digital Crown on the device.'
  提示: ''
  翻译: ''
- 内容: 'The Destination Video app automatically presents the immersive space when a person navigates to a video’s detail view, and dismisses it when they return to the library. To monitor these events, the app observes its navigation path to determine when a navigation event occurs so it can show or dismiss the space.'
  提示: ''
  翻译: ''
- 内容: 'Provide a shared viewing experience'
  提示: ''
  翻译: ''
- 内容: 'One of the best ways to enhance your app’s playback experience is to make that experience shareable with others. You can use the AVFoundation and the GroupActivities frameworks to build SharePlay experiences that bring people together even when they can’t be in the same location.'
  提示: ''
  翻译: ''
- 内容: 'The Destination Video app creates an experience where people can watch videos with others across devices and platforms. It defines a group activity called VideoWatchingActivity that adopts the GroupActivity protocol. When people have a FaceTime call active and they play a video in the full-window player, it becomes eligible for playback for everyone on the call.'
  提示: ''
  翻译: ''
- 内容: 'The app’s VideoWatchingCoordinator actor manages Destination Video’s SharePlay functionality. It observes the activation of new VideoWatchingActivity sessions and when one starts, it sets the GroupSession instance on the player object’s AVPlaybackCoordinator.'
  提示: ''
  翻译: ''
- 内容: 'With the player configured to use the group session, when the app loads new videos, they become eligible to share with people in the FaceTime call.'
  提示: ''
  翻译: ''
