- 内容: 'Designing RealityKit content with Reality Composer Pro'
  提示: ''
  翻译: '使用 Reality Composer Pro 设计 RealityKit 内容'
- 内容: 'Design RealityKit scenes for your visionOS app.'
  提示: ''
  翻译: '为你的 visionOS 应用设计 RealityKit 场景。'
- 内容: 'Overview'
  提示: ''
  翻译: '概述'
- 内容: 'Use Reality Composer Pro to visually design, edit, and preview RealityKit content. In Reality Composer Pro, you can create one or more scenes, which act as a container for RealityKit content. Scenes contain hierarchies of entities, which are virtual objects such as 3D models.'
  提示: ''
  翻译: '使用 Reality Composer Pro 直观地设计、编辑和预览 RealityKit 内容。在 Reality Composer Pro 中，你可以创建一个或多个场景，作为 RealityKit 内容的容器。场景包含实体的层次结构，而这些实体是虚拟对象，例如三维模型。'
- 内容: 'In addition to helping you compose scenes, Reality Composer Pro also gives you the ability to add and configure components — even custom components that you’ve written — to the entities in your scenes and also lets you create complex materials and effects using a node-based material editor called Shader Graph.'
  提示: ''
  翻译: '除了帮助你创建场景之外，Reality Composer Pro 还允许你向场景中的实体添加和配置组件（甚至是你编写的自定义组件）。并且能让你使用基于节点的材质编辑器（称为着色器图表（Shader Grap））创建复杂的材质和特效。'
- 内容: 'Launch Reality Composer Pro'
  提示: ''
  翻译: '启动 Reality Composer Pro'
- 内容: 'When you create a visionOS project in Xcode, it also contains a default Reality Composer Pro project named RealityKitContent within the Packages folder, which is a Swift package. The RealityKitContent package can include images, 3D models, and other assets like audio and video files. The assets you add to your project go in the RealityKitContent.rkassets bundle, while your source code goes into its Sources directory. The package also contains a file called Package.realitycomposerpro, which is the actual Reality Composer Pro project.'
  提示: ''
  翻译: '当你在 Xcode 中创建 visionOS 项目时，它还会在 Packages 文件夹中包含一个名为 RealityKitContent 的默认 Reality Composer Pro 项目，这是一个 Swift 软件包。RealityKitContent 包可以包含图片、3D 模型以及如音频和视频等其他资源。你添加到项目中的资源会放在 RealityKitContent.rkassets 包中，而你的源代码会放在 Sources 目录中。该软件包还包含一个名为 Package.realitycomposerpro 的文件，这是实际的 Reality Composer Pro 项目。'
- 内容: 'To launch Reality Composer Pro, double-click the Package.realitycomposerpro file in the Project navigator, or click the Open in Reality Composer Pro button. If your project doesn’t already have a Reality Composer Pro project, you can launch Reality Composer Pro directly by choosing Xcode > Open Developer Tool > Reality Composer Pro.'
  提示: ''
  翻译: '要启动 Reality Composer Pro，请双击“项目导航器（Project navigator）”中的 Package.realitycomposerpro 文件，或单击“Open in Reality Composer Pro”按钮。如果你的项目中还没有 Reality Composer Pro 项目，你可以选择 Xcode > Open Developer Tool > Reality Composer Pro 直接启动它。'
- 内容: 'For efficiency, store all of your RealityKit assets in Reality Composer Pro projects. Xcode compiles Reality Composer Pro projects into a more efficient format when you build your app.'
  提示: ''
  翻译: '为了提高效率，请将所有的 RealityKit 资源储存在 Reality Composer Pro 项目中。当你构建应用时，Xcode 会将 Reality Composer Pro 项目编译为更高效的格式。'
- 内容: 'Note'
  提示: ''
  翻译: '注意'
- 内容: 'Loading assets from a .reality file is considerably faster and more resource efficient than loading individual asset files.'
  提示: ''
  翻译: '与加载单个资源文件相比，从 .reality 文件加载资源要快得多，也更节省资源。'
- 内容: 'Orient yourself in Reality Composer Pro'
  提示: ''
  翻译: '熟悉 Reality Composer Pro 的操作界面'
- 内容: 'The Reality Composer Pro window has several sections. The top-half displays the active scene. If you have multiple scenes, the window shows a tab bar at the top with one tab for each open scene. A scene in Reality Composer Pro is an entity hierarchy stored in a .usda file.'
  提示: ''
  翻译: 'Reality Composer Pro 窗口有几个部分。上半部分显示处于活跃状态的场景。如果有多个场景，窗口顶部会显示一个标签栏，每个打开的场景都有一个标签页。Reality Composer Pro 中的场景是存储在 .usda 文件中的实体层次结构。'
- 内容: 'The left side of the top pane contains the hierarchy browser, which shows a tree representation of the entities in the active scene. You can toggle it using the top-left toolbar button to reveal errors and warnings. The middle pane is the 3D View, which shows a 3D representation of the active scene. The top-right is the inspector, which shows configurable values for the item selected in the 3D view, hierarchy view, or Shader Graph, depending on which has focus.'
  提示: ''
  翻译: '顶部窗格的左侧包含层级浏览器，显示当前活跃场景中实体的树形表示。你可以使用左上角的工具栏按钮切换它，以显示错误和警告。中间窗格是三维视图，显示当前活跃场景的三维内容。右上方是检查器，根据当前的焦点，会显示三维视图、层级视图或 Shader Grap 中选择项目的可配置值。'
- 内容: 'Tip'
  提示: ''
  翻译: '提示'
- 内容: 'A Reality Composer Pro scene can represent an entire RealityKit scene, and you can have multiple scenes in your Reality Composer Pro project, each driving a different RealityView in the same app. A scene can also contain a collection of entities to use as a building block. For example, if you had an airplane model, you might build a scene for it that contains its 3D model, a particle effect to make smoke come out its engine, and audio entities or components that represent the various sounds a plane makes. Your app could then load those combined assets and use them together anywhere it needs.'
  提示: ''
  翻译: '一个 Reality Composer Pro 场景可以表示整个 RealityKit 场景，并且你可以在 Reality Composer Pro 项目中拥有多个场景，每个场景在同一个应用中驱动不同的 RealityView。场景还可以包含作为构建模块的实体集合。例如，如果你有一个飞机模型，你可以为它创建一个场景，其中包含它的三维模型、使引擎冒烟的粒子效果以及代表飞机发出的各种声音的音频实体或组件。你的应用可以加载这些整合资源，并在任何需要的位置一起使用这些资源。'
- 内容: 'The bottom half of Reality Composer Pro contains the following four tabs:'
  提示: ''
  翻译: 'Reality Composer Pro 的下半部分包含以下四个标签页：'
- 内容: 'Displays all of the assets in your project.'
  提示: ''
  翻译: '显示项目中的所有资源。'
- 内容: 'An advanced, node-based material editor.'
  提示: ''
  翻译: '基于节点的进阶材质编辑器。'
- 内容: 'A tool for combining sound assets.'
  提示: ''
  翻译: '一款用于组合声音资源的工具。'
- 内容: 'Information about the currently open scene, such as the number of entities, vertices, and animations it contains.'
  提示: ''
  翻译: '有关当前打开场景的信息，如包含的实体、顶点和动画数量。'
- 内容: 'Reality Composer Pro projects start with a single empty scene called Scene which is stored in a file called Scene.usda. You can create as many additional scenes as you need by choosing File > New > Scene. New scenes open as tabs along the top of the window, and they also appear in the Project Browser as .usda files.'
  提示: ''
  翻译: 'Reality Composer Pro 项目开始时只有一个名为 Scene 的空场景，该场景存储在一个名为 Scene.usda 的文件中。你可以通过选择 File > New > Scene 来创建更多场景。新场景在窗口顶部以标签页的形式打开，并以 .usda 文件的形式出现在项目浏览器中。'
- 内容: 'If you close a scene’s tab and need to re-open it, double-click on the scene’s .usda file in the Project Browser. If you no longer need a scene, delete its .usda file from the Project Browser or remove it from your project’s .rkassets bundle in Xcode.'
  提示: ''
  翻译: '如果你关闭了某个场景的标签页并需要重新打开它，请双击项目浏览器中该场景的 .usda 文件。如果不再需要某个场景，请从项目浏览器中删除其 .usda 文件，或从 Xcode 中项目的 .rkassets 包中删除。'
- 内容: 'To delete a scene:'
  提示: ''
  翻译: '要删除一个场景：'
- 内容: 'Close the scene tab by selecting File > Close Tab'
  提示: ''
  翻译: '选择 File > Close Tab 来关闭场景标签页'
- 内容: 'Select the scene’s .usda file in the Project Browser'
  提示: ''
  翻译: '在项目浏览器中选择场景的 .usda 文件'
- 内容: 'Control-click the scene’s .usda file the Project Browser.'
  提示: ''
  翻译: '在项目浏览器中按住 Control 键单击场景的 .usda 文件。'
- 内容: 'Choose Delete from the contextual menu.'
  提示: ''
  翻译: '在弹出菜单中选择“Delete”。'
- 内容: 'Click Move to Trash.'
  提示: ''
  翻译: '单击“Move to Trash”。'
- 内容: 'This removes the scene’s .usda and the scene tab at the top of the window.'
  提示: ''
  翻译: '这将删除场景的 .usda 文件和窗口顶部的场景标签页。'
- 内容: 'Add assets to your project'
  提示: ''
  翻译: '向项目中添加资源'
- 内容: 'In Reality Composer Pro, you design scenes by first importing assets into your project. Then add assets to scenes and move, rotate, and scale them. The Project Browser tab displays all of the asset files in your project. You can add new assets by dragging them to the Project Browser or by choosing File > Import and select the assets to add to your project. To add an asset from the Project Browser to the current scene, drag it to the 3D view in the center of the window, or to the hierarchy view in the top-left of the window.'
  提示: ''
  翻译: '在 Reality Composer Pro 中，设计场景时首先要将资源导入到项目中。然后将资源添加到场景中，并移动、旋转和缩放它们。项目浏览器标签页会显示项目中的所有资源文件。你可以将新资源拖到项目浏览器中，或选择 File > Import，然后选择要添加到项目中的资源。要将项目浏览器中的资源添加到当前场景中，可将其拖动到窗口中央的三维视图或窗口左上方的层级视图中。'
- 内容: 'Note'
  提示: ''
  翻译: '注意'
- 内容: 'Reality Composer Pro projects can contain assets not used in any scene. Such assets are still compiled into your app and can be loaded at runtime and take full advantage of the efficient loading process for .reality files.'
  提示: ''
  翻译: 'Reality Composer Pro 项目可以包含不在任何场景中使用的资源。这些资源仍会编译到你的应用中，它们可在运行时加载，并且充分利用 .reality 文件的高效加载过程。'
- 内容: 'Reality Composer Pro can represent many assets as entities, but it can’t represent all assets that way; for example:'
  提示: ''
  翻译: 'Reality Composer Pro 可以将许多资源显示为实体，但并不是所有资源。例如：'
- 内容: 'USDZ models do become an entity or entity hierarchy when you add them to a scene.'
  提示: ''
  翻译: '当你将 USDZ 模型添加到场景中时，它们会成为一个实体或实体层次结构。'
- 内容: 'Image files do not become an entity. Reality Composer Pro only uses image assets indirectly, such as being the source texture for materials you build in Shader Graph. If you drag assets that Reality Composer Pro can’t turn into an entity, nothing happens.'
  提示: ''
  翻译: '图像文件不会成为实体。Reality Composer Pro 只能间接使用图像资源，例如作为在 Shader Grap 中构建材质的源纹理。如果你拖动 Reality Composer Pro 无法将其转化为实体的资源，则不会发生任何操作。'
- 内容: 'Add any 3D models, animations, sounds, and image files you need to your project. You can organize your assets into subfolders to make the Project Browser more manageable as your project grows in size.'
  提示: ''
  翻译: '将所需的三维模型、动画、声音和图像文件添加到项目中。随着项目规模的扩大，你可以将资源整理到子文件夹中，以便让项目浏览器更易于管理。'
- 内容: 'Reality Composer Pro has a library of assets that you can use in your own apps. You can access the library by clicking the Add button (+) in the toolbar. Click the icon of the down-arrow inside a circle next to an asset to download the asset to Reality Composer Pro. When the download finishes, you can double-click or drag the asset into your project.'
  提示: ''
  翻译: 'Reality Composer Pro 有一个可在自己应用中使用的资源库。单击工具栏上的添加按钮 (+) 即可访问该库。点击资源旁边圆圈内的向下箭头图标，即可将资源下载到 Reality Composer Pro。下载完成后，你可以双击或拖动资源到你的项目中。'
- 内容: 'Important'
  提示: ''
  翻译: '重要'
- 内容: 'Reality Composer Pro treats your imported assets as read-only.'
  提示: ''
  翻译: 'Reality Composer Pro 将导入的资源视为只读资源。'
- 内容: 'Changes you make to assets in a scene only affect that scene’s copy of the asset. The changes you make are stored in the scene’s .usda file, not in the original asset. That means you can work without fear of inadvertently changing other scenes. If you plan to make significant changes to an imported 3D model, such as by replacing its materials with dynamic Shader Graph materials, import the model as a.usdc file instead of as a .usdz file, and then separately import just the supporting assets you need to avoid Xcode compiling assets that you don’t need into your app.'
  提示: ''
  翻译: '你对场景中的资源所做的更改只会影响该场景的资源副本。你所做的更改将存储在场景的 .usda 文件中，而不是原始资源中。这意味着你可以放心地工作，而不必担心无意中更改其他场景。如果你计划对导入的三维模型做出重大改动，例如用动态 Shader Grap 材质替换其材质，请将模型作为 .usdc 文件而不是 .usdz 文件导入，然后仅单独导入你需要的资源，以避免 Xcode 将你不需要的资源编译到你的应用中。'
- 内容: 'Compose scenes from assets'
  提示: ''
  翻译: '用资源组成场景'
- 内容: 'All RealityKit entities in a scene exist at a specific position, orientation, and scale, even if that entity has no visual representation. When you click to select an entity in the 3D view or hierarchy view, Reality Composer Pro displays:'
  提示: ''
  翻译: '场景中的所有 RealityKit 实体都有一个明确的位置、方向和比例，即便该实体不可见。当你点击选择三维视图或层级视图中的实体时，Reality Composer Pro 将显示：'
- 内容: 'A manipulator over the entity in the 3D view.'
  提示: ''
  翻译: '三维视图中实体上的操纵器。'
- 内容: 'Any configurable values from the entity’s components in the inspector on the right.'
  提示: ''
  翻译: '右侧检查器中实体组件的所有可配置值。'
- 内容: 'You can use the manipulator to move, rotate, and scale the selected entity.'
  提示: ''
  翻译: '你可以使用操作器移动、旋转和缩放选定的实体。'
- 内容: 'To move the selected entity around the 3D scene, drag the small colored cone that corresponds to the axis you want to move it along. Alternatively, you can drag the entity itself to move it freely relative to your viewing angle.'
  提示: ''
  翻译: '要在三维场景中移动所选实体，可拖动与要移动的轴线对应的彩色小圆锥体。或者，你也可以拖动实体本身，使其相对于你的视角自由移动。'
- 内容: 'To rotate the selected entity, click on the manipulator’s rotation control, which looks like a circle, and drag in a circular motion.'
  提示: ''
  翻译: '要旋转选中的实体，请单击操作器的旋转控件（看起来像一个圆圈），然后以圆周运动的方式拖动。'
- 内容: 'Reality Composer Pro’s manipulator only shows one rotation control at a time.'
  提示: ''
  翻译: 'Reality Composer Pro 的操纵器在同一时间只能显示一个旋转控件。'
- 内容: 'To rotate an entity on one of the other axes, click the cone corresponding to the axis you want to rotate. For example, if you want to rotate the entity on the X axis, tap the red cone to bring up the red rotation handle for that axis.'
  提示: ''
  翻译: '要在其他轴上旋转实体，请单击与要旋转的轴对应的圆锥体。例如，如果要在 X 轴上旋转实体，请点击红色圆锥体，以显示该轴的红色旋转手柄。'
- 内容: 'To scale the selected entity uniformly, click the rotation circle and drag away from the entity origin to scale it up, or toward the entity origin to scale it down. Because it scales uniformly, it doesn’t matter which rotation handle Reality Composer Pro is showing.'
  提示: ''
  翻译: '要等比缩放所选实体，请单击旋转圆，然后向远离实体原点的方向拖动以放大实体，或向实体原点的方向拖动以缩小。由于它是等比缩放的，所以 Reality Composer Pro 显示哪个旋转手柄并不重要。'
- 内容: 'Note'
  提示: ''
  翻译: '注意'
- 内容: 'In the manipulator, Red indicates the X axis, Green indicates the Y axis, and Blue indicates the Z axis.'
  提示: ''
  翻译: '在操作器中，红色表示 X 轴，绿色表示 Y 轴，蓝色表示 Z 轴。'
- 内容: 'Alternatively, you can make the same changes to the selected entity by typing new values into the transform component of the inspector. The transform component stores the position, rotation, and scale for an entity. The manipulator is just a visual way to change the values on this component.'
  提示: ''
  翻译: '或者，你也可以通过在检查器的变换组件中键入新值来对所选实体进行更改。变换组件存储实体的位置、旋转和缩放比例。操作器只是更改该组件值的一种可视化方式。'
- 内容: 'Activate and deactivate scene entities'
  提示: ''
  翻译: '激活和停用场景实体'
- 内容: 'Reality Composer Pro scenes can get quite complex and sometimes contain overlapping entities, which can be difficult to work with. To simplify a scene, you can deactivate entities to remove them from the 3D view. Deactivate entities by Control-clicking them and selecting Deactivate from the contextual menu. The entity still exists in your project and is shown in the hierarchy view, albeit grayed out and without any child entities. It won’t, however, appear in the 3D view. Xcode doesn’t compile deactivated entities into your app’s bundle, so it’s important to re-activate any entities your app needs before saving your project. To reactivate an entity, Control-click the entity in the hierarchy view and select Activate from the contextual menu.'
  提示: ''
  翻译: 'Reality Composer Pro 场景可能会变得相当复杂，有时候会包含难以处理的、重叠的实体。要简化场景，可以停用实体，将其从三维视图中移除。按住 Control 键单击实体，然后从弹出菜单中选择“Deactivate”，即可停用实体。该实体仍存在于项目中，并显示在层级视图中，但会显示为灰色且没有任何子实体。不过，它不会出现在三维视图中。Xcode 不会将停用的实体编译到应用的捆绑包中，因此在保存项目之前重新激活应用所需的实体非常重要。要重新激活实体，请在层级视图中按住 Control 键并单击实体，然后从弹出菜单中选择“Activate”。'
- 内容: 'Add components to entities'
  提示: ''
  翻译: '为实体添加组件'
- 内容: 'RealityKit follows a design pattern called Entity-Component-System (ECS). In ECS, you store data on an entity using components and then implement entity behavior by writing systems that use the data from those components. You can add and configure components to entities in Reality Composer Pro, including both built-in components like ParticleEmitterComponent, and custom components that you write and place in the Sources folder of your Reality Composer Pro Swift package. You can also create new components in Reality Composer Pro and edit them in Xcode.'
  提示: ''
  翻译: 'RealityKit 遵循一种称为 ECS（实体-组件-系统 / Entity-Component-System）的设计模式。在 ECS 中，你使用组件在实体上存储数据，然后通过编写使用这些组件数据的系统来实现实体行为。你可以在 Reality Composer Pro 中为实体添加和配置组件，包括像粒子发射器组件（ParticleEmitterComponent）这样的内置组件，以及你编写并放置在 Reality Composer Pro Swift 软件包的 Sources 文件夹中的自定义组件。你还可以在 Reality Composer Pro 中创建新组件，并在 Xcode 中对其进行编辑。'
- 内容: 'For more information about ECS, see Understanding RealityKit’s modular architecture.'
  提示: ''
  翻译: '有关 ECS 的更多信息，请参阅了解 RealityKit 的模块化架构。'
- 内容: 'To add a component to an entity, select that entity in the hierarchy view or 3D view. At the bottom-right of the inspector window, click Add Component. A list of available components appears with New Component at the top. If you select the first item, Reality Composer Pro creates a new component class in the Sources folder, and optionally a new system class. It also adds the component to the selected entity. If you select any other item in the list, it adds that component to the selected entity if it doesn’t already have that component.'
  提示: ''
  翻译: '要为实体添加组件，请在层级视图或三维视图中选择该实体。在检查器窗口的右下角，单击“Add Component”。此时会出现一个可用组件列表，最上方是“New Component”。如果选择第一项，Reality Composer Pro 就会在 Sources 文件夹中创建一个新的组件类，并根据需要创建一个可选的新的系统类。它还会将组件添加到选定的实体中。如果你选择了列表中的任何其他项目，如果该实体尚未拥有此组件，则会将该组件添加到所选实体中。'
- 内容: 'Create or modify entity hierarchies'
  提示: ''
  翻译: '创建或修改实体层级结构'
- 内容: 'Reality Composer Pro scenes are hierarchies of RealityKit entities. You can change the relationship between entities in the hierarchy browser except for parts of the hierarchy imported from a .usdz file, which Reality Composer Pro treats as a read-only file.'
  提示: ''
  翻译: 'Reality Composer Pro 场景即是 RealityKit 实体的层级结构。你可以更改层级浏览器中实体之间的关系，但从 .usdz 文件导入的部分层级结构除外，因为 Reality Composer Pro 将其视为只读文件。'
- 内容: 'To change the relationship between entities, or to create a relationship between two currently unrelated entities, use the hierarchy view and drag an entity onto the entity that you want it to be part of. If you want an entity to become a root entity, drag it to the Root transform at the top of the hierarchy view.'
  提示: 'Root transform 又被称作“根变换”，但此处选择通俗地译为根节点'
  翻译: '要更改实体之间的关系，或在两个当前不相关的实体之间创建关系，请使用层级视图并将一个实体拖到你希望它所属的另一实体上。如果希望某个实体成为根实体，可将其拖至层级视图顶部的根节点中。'
- 内容: 'Modify or create new materials'
  提示: ''
  翻译: '修改或创建新材质'
- 内容: 'When you import a USDZ model into Reality Composer Pro, it creates a RealityKit material for every physically-based rendering (PBR) material the asset contains. Reality Composer Pro displays materials in the hierarchy view just like it displays entities, except it uses a paintbrush icon. Reality Composer Pro doesn’t display materials in the 3D view.'
  提示: ''
  翻译: '当你将 USDZ 模型导入 Reality Composer Pro 时，它会为该资源包含的每个基于物理渲染（PBR）的材质创建一个 RealityKit 材质。Reality Composer Pro 在层级视图中显示材质，就像显示实体一样，只不过使用的是画笔图标。Reality Composer Pro 不会在三维视图中显示材质。'
- 内容: 'Note'
  提示: ''
  翻译: '注意'
- 内容: 'The library in Reality Composer Pro contains materials for several common real-world surfaces like metal, wood, and denim that you can import into your project.'
  提示: ''
  翻译: 'Reality Composer Pro 中的资源库包含了现实世界中常见的几种表面材质，如金属、木材和牛仔布，你可以将它们导入到你的项目中。'
- 内容: 'If you select a PBR material in the hierarchy view, you can edit it using the inspector. You can replace images, colors, or values for any of the PBR attributes with another image, color, or value of your choosing. Any changes you make to a material affects any entity that’s bound to that material. You can also create new materials from scratch by clicking the Add button (+) at the bottom of the scene hierarchy and choosing Material.'
  提示: ''
  翻译: '在层级视图中选择了一个 PBR 材质后，就可以使用检查器对其进行编辑。你可以用其他图像、颜色或数值替换任何 PBR 属性的图像、颜色或数值。对材质所做的任何更改都会影响到与该材质绑定的所有实体。你还可以通过单击场景层级视图底部的添加按钮 (+) 并选择 Material，以从头开始创建新材质。'
- 内容: 'Build materials in Shader Graph'
  提示: ''
  翻译: '在 Shader Grap 中构建材质'
- 内容: 'PBR materials are great at reproducing real-world surfaces. However, they can’t represent nonrealistic materials like cartoon shaders, and they can’t contain logic. This means that you can’t animate a PBR material or have it react to input from your app.'
  提示: ''
  翻译: 'PBR 材质能很好地再现真实世界的表面。然而，它不能表现卡通着色器等非现实材质，也不能包含逻辑。这意味着你无法为 PBR 材质制作动画，也无法让它对应用的输入做出反应。'
- 内容: 'Reality Composer Pro offers a second type of material called a custom material. You can build and edit custom materials using the Shader Graph tab. Shader Graph provides a tremendous amount of control over materials and allows you to do things that would otherwise require writing Metal shaders. For more information on writing Metal shaders, see Metal.'
  提示: ''
  翻译: 'Reality Composer Pro 提供的第二种材质称为自定义材质。你可以使用 Shader Grap 标签页创建和编辑自定义材质。 Shader Grap 为提供了大量的材质控制功能，让你可以完成原本需要编写 Metal 着色器才能完成的工作。有关编写 Metal 着色器的更多信息，请参阅 Metal。'
- 内容: 'Note'
  提示: ''
  翻译: '注意'
- 内容: 'RealityKit doesn’t represent Reality Composer Pro custom materials as an instance of CustomMaterial, as you might expect. Instead, RealityKit represents these materials as ShaderGraphMaterial instances.'
  提示: ''
  翻译: 'RealityKit 并不像你期望的那样，将 Reality Composer Pro 自定义材质表示为 CustomMaterial 的实例。相反，RealityKit 会将这些材质表示为 ShaderGraphMaterial 实例。'
- 内容: 'The materials you build in the editor can affect both the look of an entity and its shape. If you build a node graph and connect it to the Custom Surface pin on the output node, that node graph controls the surface appearance of the model and roughly equates to writing Metal code in a fragment shader. If you build a node graph and connect it to the Custom Geometry Modifier output pin, those nodes control the shape of the entity, which equates to Metal code running in a vertex shader.'
  提示: ''
  翻译: '在编辑器中创建的材质会影响实体的外观和形状。如果你构建一个节点图并将其连接到输出节点上的“自定义表面（Custom Surface）”引脚，则该节点图将控制模型的表面外观，这大致相当于在片段着色器中编写 Metal 代码。如果你构建一个节点图并将其连接到“自定义几何体修饰器（Custom Geometry Modifier）”输出引脚，这些节点就会控制实体的形状，这相当于在顶点着色器中运行 Metal 代码。'
- 内容: 'Nodes represent values and operations and serve the same purpose as either a variable or constant, or a function in Metal. If you need the sine of a value, for example, connect the value’s output node to the input pin of a Sin node. Add new nodes to the graph by double-clicking the background of the Shader Graph view or click the New Node button on the right side of the screen.'
  提示: ''
  翻译: '节点代表数值和操作，其作用与 Metal 中的变量、常量或函数相同。例如，如果需要某个值的正弦值，可将该值的输出节点连接到 Sin 节点的输入引脚上。双击 Shader Grap 视图的背景或点击屏幕右侧的“New Node”按钮，即可在图形中添加新节点。'
- 内容: 'Important'
  提示: ''
  翻译: '重要'
- 内容: 'Some nodes, like Sin, are universal and can be used with either output pin. Other nodes are specific to either the Custom Surface or Geometry Modifier outputs. If a node name starts with Geometry Modifier, you can only connect it to the Geometry Modifier output pin. If the node’s name starts with “Surface”, you can only connect it to the Custom Surface output pin.'
  提示: ''
  翻译: '有些节点（如 Sin）是通用的，可用于任意输出引脚。其他节点则专用于“自定义表面（Custom Surface）”或“几何体修饰器（Custom Geometry Modifier）”输出。如果节点名称以 Geometry Modifier 开头，则只能将其连接到几何图形修改器输出引脚。如果节点名称以 Surface 开头，则只能将其连接到自定义表面输出引脚。'
- 内容: 'To unlock the real power of Shader Graph, you need to be able to change values on the material from Swift code. Shader Graph allows you to do this by creating promoted inputs, which are parameters you can set and read from Swift to change your material at runtime. If you have a feature that you want to turn on and off, you might create a Boolean input parameter and have conditional logic based on its value. If you want to smoothly interpolate between two colors, you might create a Float input parameter and use it to control how to interpolate between the two colors. You can Control-click on a constant node and select Promote to turn it into a promoted input. You can also turn a promoted input back into a constant by Control-clicking it and selecting Demote.'
  提示: ''
  翻译: '要解锁 Shader Grap 的真正威力，需要能够通过 Swift 代码更改材质的值。 Shader Grap 可以通过创建升级输入来实现这一功能，这些参数可以从 Swift 中设置和读取，从而达成在运行时更改材质。如果你想打开或关闭某个功能，你可以创建一个布尔值输入参数，并根据其值设置条件逻辑。如果你想在两种颜色之间平滑地修改值，可以创建一个 Float 输入参数，并用它来控制如何在两种颜色之间插值。你可以按住 Control 键单击常量节点并选择“升级（Promote）”，将其转化为升级输入。或通过按住 Control 键并选择“降级（Demote）”，将已升级的输入变回常量。'
- 内容: 'If you don’t have an existing constant to promote, you can create new promoted inputs using the inspector. The New Input button only shows up in the inspector when you select a material in the hierarchy view but have no nodes selected in the Shader Graph tab.'
  提示: ''
  翻译: '如果没有现有的可升级常量，可以使用检查器创建新的升级输入。只有在层级视图中选择了材质，但 Shader Grap 标签页中未选择节点时，“New Input”按钮才会显示在检查器中。'
- 内容: 'To change the value of an input parameter from Swift code, use setParameter(name:value:), passing the name of the parameter and the new value. Note that parameter names are case sensitive, so your name string must exactly match what you called the parameter in Shader Graph.'
  提示: ''
  翻译: '要在 Swift 代码中更改输入参数的值，可使用 setParameter(name:value:)方法，同时传递参数名称和新值。请注意，参数名称区分大小写，因此 name 字符串必须与 Shader Grap 中的参数名称完全一致。'
- 内容: 'For examples of Shader Graph use, see Diorama and Happy Beam.'
  提示: ''
  翻译: '有关 Shader Grap 的使用示例，请参阅西洋镜和快乐光束。'
- 内容: 'Use references to reuse assets'
  提示: ''
  翻译: '使用引用以复用资源'
- 内容: 'If your project has multiple scenes that share assets, you can use references to avoid creating duplicate assets. A reference acts like an alias in Finder — it points to the original asset and functions just as if it were another copy of that asset.'
  提示: ''
  翻译: '如果你的项目有多个共享资源的场景，你可以使用引用来避免创建重复的资源。引用的作用类似于 Finder 中的别名--它指向原始资源，其功能就如同该资源的另一个副本。'
- 内容: 'Create references using the inspector. By default, the references section is hidden for entities and materials that don’t have any references. To add a new reference to an asset or material that doesn’t have one, choose Reality Composer Pro > Settings and uncheck Hide Empty References.'
  提示: ''
  翻译: '使用检查器创建引用。默认情况下，对于没有任何引用的实体和材质，引用部分是隐藏的。要为没有引用的资源或材质添加新的引用，请选择 Reality Composer Pro > Settings，然后取消选中“隐藏空引用（Hide Empty References）”。'
- 内容: 'To add a reference, click the Add button (+) at the bottom of the references section in the inspector, choose the .usda file for the scene that contains the asset, then choose the asset you want to link to. After you do that, the selected entity or material becomes a copy of the one you linked to.'
  提示: ''
  翻译: '要添加引用，请单击检查器中引用部分底部的添加按钮 (+)，选择包含资源的场景的 .usda 文件，然后选择要链接的资源。完成后，所选实体或材质将成为你所链接的实体或材质的副本。'
- 内容: 'Important'
  提示: ''
  翻译: '重要'
- 内容: 'If you make changes to a linked asset, those changes will affect every linked reference.'
  提示: ''
  翻译: '如果你对链接的资源进行了更改，这些更改将影响每个链接的引用。'
- 内容: 'Preview scenes on device'
  提示: ''
  翻译: '在设备上预览场景'
- 内容: 'If you have an Apple Vision Pro connected to your Mac, choose Preview > Play or click the preview button in the Reality Composer Pro toolbar to view your scene on device. The Preview button is the left-most button on the right side of the toolbar — the one with an Apple Vision Pro icon. If you have multiple Apple Vision Pro devices connected, choose which device to use by clicking the pull-down menu next to the Preview button.'
  提示: '这里的记述未必准确，在 Reality Composer Pro 2.0 中这个按钮不在最左端，而且名为“Send To Device”'
  翻译: '如果你的 Mac 连接了 Apple Vision Pro，请选择 Preview > Play 或单击 Reality Composer Pro 工具栏中的预览按钮以在设备上查看场景。预览按钮是工具栏右侧最左端的按钮，即带有 Apple Vision Pro 图标的按钮。如果你连接了多个 Apple Vision Pro 设备，可通过单击预览按钮旁边的下拉菜单选择要使用的设备。'
- 内容: 'Load Reality Composer Pro scenes in RealityKit'
  提示: ''
  翻译: '在 RealityKit 中加载 Reality Composer Pro 场景'
- 内容: 'Loading a Reality Composer Pro scene is nearly identical to loading a USDZ asset from your app bundle, except you have to specify the Reality Composer Pro package bundle instead. You typically do this in the make closure of a RealityView initializer. Reality Composer Pro packages define a global constant that points to its bundle, which is named after the project with “Bundle” appended to it. In the default Xcode visionOS template, the Reality Composer Pro project is called RealityKitContent, so the global bundle variable is called realityKitContentBundle:'
  提示: ''
  翻译: '加载 Reality Composer Pro 场景与从应用捆绑包中加载 USDZ 资源几乎完全相同，只是你必须指定 Reality Composer Pro 捆绑包。你通常会在 RealityView 初始化方法的 make 闭包中执行这一操作。Reality Composer Pro 软件包定义了一个指向其捆绑包的全局常量，该常量以尾缀了“Bundle”的项目名命名。在默认的 Xcode visionOS 模板中，Reality Composer Pro 项目名为 RealityKitContent，因此全局捆绑包变量名为 realityKitContentBundle：'
- 内容: 'Note'
  提示: ''
  翻译: '注意'
- 内容: 'The code above saves a reference to the root node. This isn’t required, but with RealityView, unlike ARView on iOS and macOS, you don’t have ready access to the scene content, so it’s often handy to maintain your own reference to the root entity of your scene in your app’s data model.'
  提示: ''
  翻译: '上述代码保存了对根节点的引用。虽然这并不是必需的，但与 iOS 和 macOS 上的 ARView 不同，RealityView 无法让你直接访问场景内容，因此在应用的数据模型中保持你对场景根实体的引用通常会很方便。'
- 内容: 'When RealityKit finishes loading the scene, the scene variable contains the root entity of the scene you specified. Add it to content and RealityKit displays it to the user.'
  提示: ''
  翻译: '当 RealityKit 完成场景加载时，scene 变量将包含你指定的场景根实体。将其添加到 content 后，RealityKit 就会将其显示给用户。'
